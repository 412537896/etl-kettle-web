<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caixin.data.middle.etl.kettle.mbg.mapper.TaskExecutionLogMapper">
  <resultMap id="BaseResultMap" type="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    <id column="fireId" jdbcType="BIGINT" property="fireid" />
    <result column="jobName" jdbcType="VARCHAR" property="jobname" />
    <result column="startTime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="execMethod" jdbcType="VARCHAR" property="execmethod" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    <result column="executionConfiguration" jdbcType="LONGVARCHAR" property="executionconfiguration" />
    <result column="executionLog" jdbcType="LONGVARCHAR" property="executionlog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fireId, jobName, startTime, endTime, execMethod, status, type
  </sql>
  <sql id="Blob_Column_List">
    executionConfiguration, executionLog
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_execution_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_execution_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_execution_log
    where fireId = #{fireid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_execution_log
    where fireId = #{fireid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLogExample">
    delete from task_execution_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    insert into task_execution_log (fireId, jobName, startTime, 
      endTime, execMethod, status, 
      type, executionConfiguration, executionLog
      )
    values (#{fireid,jdbcType=BIGINT}, #{jobname,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{execmethod,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{executionconfiguration,jdbcType=LONGVARCHAR}, #{executionlog,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    insert into task_execution_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fireid != null">
        fireId,
      </if>
      <if test="jobname != null">
        jobName,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="execmethod != null">
        execMethod,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="executionconfiguration != null">
        executionConfiguration,
      </if>
      <if test="executionlog != null">
        executionLog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fireid != null">
        #{fireid,jdbcType=BIGINT},
      </if>
      <if test="jobname != null">
        #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="execmethod != null">
        #{execmethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="executionconfiguration != null">
        #{executionconfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="executionlog != null">
        #{executionlog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLogExample" resultType="java.lang.Long">
    select count(*) from task_execution_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_execution_log
    <set>
      <if test="record.fireid != null">
        fireId = #{record.fireid,jdbcType=BIGINT},
      </if>
      <if test="record.jobname != null">
        jobName = #{record.jobname,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.execmethod != null">
        execMethod = #{record.execmethod,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.executionconfiguration != null">
        executionConfiguration = #{record.executionconfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.executionlog != null">
        executionLog = #{record.executionlog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update task_execution_log
    set fireId = #{record.fireid,jdbcType=BIGINT},
      jobName = #{record.jobname,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      execMethod = #{record.execmethod,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      executionConfiguration = #{record.executionconfiguration,jdbcType=LONGVARCHAR},
      executionLog = #{record.executionlog,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_execution_log
    set fireId = #{record.fireid,jdbcType=BIGINT},
      jobName = #{record.jobname,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      execMethod = #{record.execmethod,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    update task_execution_log
    <set>
      <if test="jobname != null">
        jobName = #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="execmethod != null">
        execMethod = #{execmethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="executionconfiguration != null">
        executionConfiguration = #{executionconfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="executionlog != null">
        executionLog = #{executionlog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where fireId = #{fireid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    update task_execution_log
    set jobName = #{jobname,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      execMethod = #{execmethod,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      executionConfiguration = #{executionconfiguration,jdbcType=LONGVARCHAR},
      executionLog = #{executionlog,jdbcType=LONGVARCHAR}
    where fireId = #{fireid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.caixin.data.middle.etl.kettle.mbg.model.TaskExecutionLog">
    update task_execution_log
    set jobName = #{jobname,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      execMethod = #{execmethod,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where fireId = #{fireid,jdbcType=BIGINT}
  </update>
</mapper>